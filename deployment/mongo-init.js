// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è MongoDB –¥–ª—è BitCraft Task Manager
print('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è MongoDB –¥–ª—è BitCraft Task Manager...');

// –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
db = db.getSiblingDB('bitcraft_task_manager');

// –°–æ–∑–¥–∞–µ–º –∫–æ–ª–ª–µ–∫—Ü–∏–∏ —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π
db.createCollection('users', {
  validator: {
    $jsonSchema: {
      bsonType: "object",
      required: ["name", "email", "guild"],
      properties: {
        name: {
          bsonType: "string",
          description: "–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ"
        },
        email: {
          bsonType: "string",
          description: "Email –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω"
        },
        guild: {
          bsonType: "string",
          description: "–ì–∏–ª—å–¥–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞"
        }
      }
    }
  }
});

db.createCollection('tasks', {
  validator: {
    $jsonSchema: {
      bsonType: "object",
      required: ["name", "professions", "deadline", "priority", "description"],
      properties: {
        name: {
          bsonType: "string",
          description: "–ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ"
        },
        professions: {
          bsonType: "array",
          description: "–ú–∞—Å—Å–∏–≤ –ø—Ä–æ—Ñ–µ—Å—Å–∏–π –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω"
        },
        deadline: {
          bsonType: "string",
          description: "–î–µ–¥–ª–∞–π–Ω –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω"
        },
        priority: {
          bsonType: "string",
          enum: ["low", "medium", "high", "critical"],
          description: "–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ–¥–Ω–∏–º –∏–∑: low, medium, high, critical"
        }
      }
    }
  }
});

// –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∑–∞–ø—Ä–æ—Å–æ–≤
db.users.createIndex({ "name": 1 }, { unique: true });
db.users.createIndex({ "email": 1 }, { unique: true });
db.users.createIndex({ "guild": 1 });
db.users.createIndex({ "reputation": -1 });

db.tasks.createIndex({ "id": 1 }, { unique: true });
db.tasks.createIndex({ "status": 1 });
db.tasks.createIndex({ "priority": 1 });
db.tasks.createIndex({ "deadline": 1 });
db.tasks.createIndex({ "professions": 1 });
db.tasks.createIndex({ "assignedTo": 1 });
db.tasks.createIndex({ "createdAt": -1 });

print('‚úÖ MongoDB –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
print('üìã –°–æ–∑–¥–∞–Ω—ã –∫–æ–ª–ª–µ–∫—Ü–∏–∏: users, tasks');
print('üîç –î–æ–±–∞–≤–ª–µ–Ω—ã –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏');
print('üéâ –ì–æ—Ç–æ–≤–æ –∫ —Ä–∞–±–æ—Ç–µ!'); 