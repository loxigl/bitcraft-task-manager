version: '3.8'

services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.dev.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend
    networks:
      - bitcraft-network

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile.dev
      args:
        NEXT_PUBLIC_API_URL: /api
    ports:
      - "3000:3000"
    volumes:
      - ../frontend:/app
      - /app/node_modules
      - /app/.next
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=/api
      - WATCHPACK_POLLING=false
    depends_on:
      - backend
    networks:
      - bitcraft-network

  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile.dev
    ports:
      - "5000:5000"
      - "9229:9229"  # Debug port
    volumes:
      - ../backend:/app
      - /app/node_modules
      - /app/dist
    environment:
      - NODE_ENV=development
      - PORT=5000
      - MONGODB_URI=mongodb://mongo:27017/bitcraft_dev
      - JWT_SECRET=bitcraft_dev_secret_key_change_in_production
      - JWT_EXPIRE=7d
      - CORS_ORIGIN=http://localhost:3000
    depends_on:
      - mongo
    networks:
      - bitcraft-network

  mongo:
    image: mongo:7.0
    ports:
      - "27017:27017"
    volumes:
      - bitcraft_mongo_dev_data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=bitcraft_dev
    networks:
      - bitcraft-network

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_AUTH_DATABASE: bitcraft_dev
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
      ME_CONFIG_BASICAUTH: "false"
    depends_on:
      - mongo
    networks:
      - bitcraft-network

volumes:
  bitcraft_mongo_dev_data:

networks:
  bitcraft-network:
    driver: bridge 